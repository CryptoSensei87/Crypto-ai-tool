import pandas as pd
import json

def load_data():
    # Load data from JSON files or API responses
    with open('binance_data.json', 'r') as f:
        binance_data = json.load(f)
    with open('coingecko_data.json', 'r') as f:
        coingecko_data = json.load(f)
    with open('coinmarketcap_data.json', 'r') as f:
        coinmarketcap_data = json.load(f)
    
    return binance_data, coingecko_data, coinmarketcap_data

def clean_data(data):
    # Convert to DataFrame
    df = pd.DataFrame(data)
    
    # Handle missing values
    df = df.dropna()
    
    # Remove duplicates
    df = df.drop_duplicates()
    
    # Handle outliers (example: remove prices that are too high/low)
    if 'price' in df.columns:
        df = df[(df['price'] > df['price'].quantile(0.01)) & (df['price'] < df['price'].quantile(0.99))]
    
    return df

def normalize_data(df):
    # Normalize the data using Min-Max scaling
    df = (df - df.min()) / (df.max() - df.min())
    return df

def main():
    binance_data, coingecko_data, coinmarketcap_data = load_data()
    
    binance_df = clean_data(binance_data)
    coingecko_df = clean_data(coingecko_data)
    coinmarketcap_df = clean_data(coinmarketcap_data)
    
    # Combine data from different sources
    combined_df = pd.concat([binance_df, coingecko_df, coinmarketcap_df], ignore_index=True)
    
    # Normalize the combined data
    normalized_df = normalize_data(combined_df)
    
    # Save the cleaned and normalized data to a CSV file
    normalized_df.to_csv('cleaned_normalized_data.csv', index=False)
    
    print(normalized_df.head())

if __name__ == "__main__":
    main()